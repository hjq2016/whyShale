<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<inceptionYear>2021</inceptionYear>

	<groupId>com.hjq</groupId>
	<artifactId>whyShare-all</artifactId>
	<version>${revision}</version>
	<packaging>pom</packaging>

	<name>whyShare</name>
	<description>a websit that share knowledge</description>

	<scm>
		<url>git@github.com:hjq2016/whyShale.git</url>
		<connection>scm:git@github.com:hjq2016/whyShale.git</connection>
		<developerConnection>scm:git@github.com:hjq2016/whyShale.git</developerConnection>
		<tag>whyShare-all-${revision}</tag>
	</scm>

	<mailingLists>
		<mailingList>
			<name>nothing</name>
		</mailingList>
	</mailingLists>

	<developers>
		<developer>
			<id>hjq</id>
			<name>hjq</name>
			<url></url>
			<email>924946361@qq.com</email>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<organization>
		<name>nothing</name>
		<url></url>
	</organization>

	<issueManagement>
		<system>github</system>
		<url>https://github.com/hjq2016/whyShale/issues</url>
	</issueManagement>

	<properties>
		<revision>0.0.1</revision>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!-- Maven properties -->
		<maven.test.skip>false</maven.test.skip>
		<maven.javadoc.skip>true</maven.javadoc.skip>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>

		<spring-boot-dependencies.version>2.3.2.RELEASE</spring-boot-dependencies.version>
		<spring.cloud-version>Hoxton.SR10</spring.cloud-version>
		<com.alibaba.cloud.version>2.2.5.RELEASE</com.alibaba.cloud.version>
		<knife4j.version>2.0.5</knife4j.version>
		<maven-flatten-version>1.1.0</maven-flatten-version>
		<druid-starter>1.1.22</druid-starter>
		<mybatis-plus-boot-starter.version>3.4.0</mybatis-plus-boot-starter.version>
		<poi.version>4.1.1</poi.version>
		<docker-maven-plugin.version>1.2.2</docker-maven-plugin.version>
		<easypoi.version>4.1.3</easypoi.version>
		<velocity.version>1.7</velocity.version>
		<hutool.version>5.1.4</hutool.version>
		<commons-io.version>2.6</commons-io.version>
	</properties>

	<!-- 所有的子项目默认依赖 -->
	<dependencies>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.72</version>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>${maven-flatten-version}</version>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
					<pomElements>
						<dependencies>expand</dependencies>
					</pomElements>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot-dependencies.version}</version>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring.cloud-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
				<version>
					${com.alibaba.cloud.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
				<version>${com.alibaba.cloud.version}</version>
			</dependency>
            <!--swagger-->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-micro-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>

			<dependency>
				<groupId>com.hjq</groupId>
				<artifactId>hjq-common-collection</artifactId>
				<version>${revision}</version>
			</dependency>

			<!-- druid 官方 starter -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>${druid-starter}</version>
			</dependency>
			<!-- mybatis-plus start -->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter</artifactId>
				<version>${mybatis-plus-boot-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-extension</artifactId>
				<version>${mybatis-plus-boot-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus</artifactId>
				<version>${mybatis-plus-boot-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
			</dependency>
            <!--   easypoi   -->
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-base</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>${velocity.version}</version>
			</dependency>
			<!-- hutool java工具类库  -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<!-- 子模块管理 -->
	<modules>
		<module>user-service</module>
		<module>page-service</module>
		<module>home-service</module>
		<module>search-service</module>
		<module>statistics-service</module>
		<module>ask-service</module>
		<module>combination-service</module>
		<module>gateway-service</module>
		<module>nacos-service</module>
		<module>hjq-busines</module>
		<module>hjq-commons</module>
	</modules>


</project>
